# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_SAMPLE_LABEL_METADATA = Metadata(
    id="c932dc0a98511082cdc147b0bac256709172f10e.boutiques",
    name="mris_sample_label",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisSampleLabelParameters = typing.TypedDict('MrisSampleLabelParameters', {
    "__STYX_TYPE__": typing.Literal["mris_sample_label"],
    "input_label_file": InputPathType,
    "input_surface_file": InputPathType,
    "output_label_file": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "mris_sample_label": mris_sample_label_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "mris_sample_label": mris_sample_label_outputs,
    }.get(t)


class MrisSampleLabelOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_sample_label(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_label_file: OutputPathType
    """The resulting output label file"""


def mris_sample_label_params(
    input_label_file: InputPathType,
    input_surface_file: InputPathType,
    output_label_file: str,
) -> MrisSampleLabelParameters:
    """
    Build parameters.
    
    Args:
        input_label_file: Input label file.
        input_surface_file: Input surface file.
        output_label_file: Output label file.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "mris_sample_label",
        "input_label_file": input_label_file,
        "input_surface_file": input_surface_file,
        "output_label_file": output_label_file,
    }
    return params


def mris_sample_label_cargs(
    params: MrisSampleLabelParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_sample_label")
    cargs.append(execution.input_file(params.get("input_label_file")))
    cargs.append(execution.input_file(params.get("input_surface_file")))
    cargs.append(params.get("output_label_file"))
    return cargs


def mris_sample_label_outputs(
    params: MrisSampleLabelParameters,
    execution: Execution,
) -> MrisSampleLabelOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisSampleLabelOutputs(
        root=execution.output_file("."),
        output_label_file=execution.output_file(params.get("output_label_file")),
    )
    return ret


def mris_sample_label_execute(
    params: MrisSampleLabelParameters,
    execution: Execution,
) -> MrisSampleLabelOutputs:
    """
    This tool samples a label onto a surface model.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `MrisSampleLabelOutputs`).
    """
    params = execution.params(params)
    cargs = mris_sample_label_cargs(params, execution)
    ret = mris_sample_label_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_sample_label(
    input_label_file: InputPathType,
    input_surface_file: InputPathType,
    output_label_file: str,
    runner: Runner | None = None,
) -> MrisSampleLabelOutputs:
    """
    This tool samples a label onto a surface model.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_label_file: Input label file.
        input_surface_file: Input surface file.
        output_label_file: Output label file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisSampleLabelOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_SAMPLE_LABEL_METADATA)
    params = mris_sample_label_params(
        input_label_file=input_label_file,
        input_surface_file=input_surface_file,
        output_label_file=output_label_file,
    )
    return mris_sample_label_execute(params, execution)


__all__ = [
    "MRIS_SAMPLE_LABEL_METADATA",
    "MrisSampleLabelOutputs",
    "MrisSampleLabelParameters",
    "mris_sample_label",
    "mris_sample_label_params",
]
