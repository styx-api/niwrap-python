# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MRIS_EXTRACT_MAIN_COMPONENT_METADATA = Metadata(
    id="3c629f67071bd64777c7e0eb6653d23ab4e436c0.boutiques",
    name="mris_extract_main_component",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MrisExtractMainComponentParameters = typing.TypedDict('MrisExtractMainComponentParameters', {
    "__STYX_TYPE__": typing.Literal["mris_extract_main_component"],
    "input_surface": InputPathType,
    "output_surface": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "mris_extract_main_component": mris_extract_main_component_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "mris_extract_main_component": mris_extract_main_component_outputs,
    }.get(t)


class MrisExtractMainComponentOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_extract_main_component(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_surface_file: OutputPathType
    """Extracted main component of the input surface"""


def mris_extract_main_component_params(
    input_surface: InputPathType,
    output_surface: str,
) -> MrisExtractMainComponentParameters:
    """
    Build parameters.
    
    Args:
        input_surface: Input surface file (e.g. lh.white).
        output_surface: Output surface file (e.g. lh.white.main).
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "mris_extract_main_component",
        "input_surface": input_surface,
        "output_surface": output_surface,
    }
    return params


def mris_extract_main_component_cargs(
    params: MrisExtractMainComponentParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("mris_extract_main_component")
    cargs.append(execution.input_file(params.get("input_surface")))
    cargs.append(params.get("output_surface"))
    return cargs


def mris_extract_main_component_outputs(
    params: MrisExtractMainComponentParameters,
    execution: Execution,
) -> MrisExtractMainComponentOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MrisExtractMainComponentOutputs(
        root=execution.output_file("."),
        output_surface_file=execution.output_file(params.get("output_surface")),
    )
    return ret


def mris_extract_main_component_execute(
    params: MrisExtractMainComponentParameters,
    execution: Execution,
) -> MrisExtractMainComponentOutputs:
    """
    Tool for extracting the main component from a surface input.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `MrisExtractMainComponentOutputs`).
    """
    params = execution.params(params)
    cargs = mris_extract_main_component_cargs(params, execution)
    ret = mris_extract_main_component_outputs(params, execution)
    execution.run(cargs)
    return ret


def mris_extract_main_component(
    input_surface: InputPathType,
    output_surface: str,
    runner: Runner | None = None,
) -> MrisExtractMainComponentOutputs:
    """
    Tool for extracting the main component from a surface input.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_surface: Input surface file (e.g. lh.white).
        output_surface: Output surface file (e.g. lh.white.main).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisExtractMainComponentOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_EXTRACT_MAIN_COMPONENT_METADATA)
    params = mris_extract_main_component_params(
        input_surface=input_surface,
        output_surface=output_surface,
    )
    return mris_extract_main_component_execute(params, execution)


__all__ = [
    "MRIS_EXTRACT_MAIN_COMPONENT_METADATA",
    "MrisExtractMainComponentOutputs",
    "MrisExtractMainComponentParameters",
    "mris_extract_main_component",
    "mris_extract_main_component_params",
]
