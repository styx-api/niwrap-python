# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

MORPH_SUBJECT_RH_METADATA = Metadata(
    id="3bc20c9a814d4ed47946818ef81d8f65039baeee.boutiques",
    name="morph_subject-rh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


MorphSubjectRhParameters = typing.TypedDict('MorphSubjectRhParameters', {
    "@type": typing.Literal["freesurfer.morph_subject-rh"],
    "subject_id": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "freesurfer.morph_subject-rh": morph_subject_rh_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
    }.get(t)


class MorphSubjectRhOutputs(typing.NamedTuple):
    """
    Output object returned when calling `morph_subject_rh(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def morph_subject_rh_params(
    subject_id: str,
) -> MorphSubjectRhParameters:
    """
    Build parameters.
    
    Args:
        subject_id: Subject ID to morph the right hemisphere.
    Returns:
        Parameter dictionary
    """
    params = {
        "@type": "freesurfer.morph_subject-rh",
        "subject_id": subject_id,
    }
    return params


def morph_subject_rh_cargs(
    params: MorphSubjectRhParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("morph_subject-rh")
    cargs.extend([
        "-rh",
        params.get("subject_id")
    ])
    return cargs


def morph_subject_rh_outputs(
    params: MorphSubjectRhParameters,
    execution: Execution,
) -> MorphSubjectRhOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = MorphSubjectRhOutputs(
        root=execution.output_file("."),
    )
    return ret


def morph_subject_rh_execute(
    params: MorphSubjectRhParameters,
    runner: Runner | None = None,
) -> MorphSubjectRhOutputs:
    """
    morph_subject-rh
    
    A tool for morphing the right hemisphere of subject data in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MorphSubjectRhOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MORPH_SUBJECT_RH_METADATA)
    params = execution.params(params)
    cargs = morph_subject_rh_cargs(params, execution)
    ret = morph_subject_rh_outputs(params, execution)
    execution.run(cargs)
    return ret


def morph_subject_rh(
    subject_id: str,
    runner: Runner | None = None,
) -> MorphSubjectRhOutputs:
    """
    morph_subject-rh
    
    A tool for morphing the right hemisphere of subject data in FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_id: Subject ID to morph the right hemisphere.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MorphSubjectRhOutputs`).
    """
    params = morph_subject_rh_params(
        subject_id=subject_id,
    )
    return morph_subject_rh_execute(params, runner)


__all__ = [
    "MORPH_SUBJECT_RH_METADATA",
    "MorphSubjectRhOutputs",
    "MorphSubjectRhParameters",
    "morph_subject_rh",
    "morph_subject_rh_execute",
    "morph_subject_rh_params",
]
