# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

FIDUCIALS_CORRECTION_METADATA = Metadata(
    id="4c8ff34a05a460d57cf9bd6ab63606fa5145834f.boutiques",
    name="fiducials_correction",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


FiducialsCorrectionParameters = typing.TypedDict('FiducialsCorrectionParameters', {
    "__STYX_TYPE__": typing.Literal["fiducials_correction"],
    "input_file": InputPathType,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "fiducials_correction": fiducials_correction_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "fiducials_correction": fiducials_correction_outputs,
    }.get(t)


class FiducialsCorrectionOutputs(typing.NamedTuple):
    """
    Output object returned when calling `fiducials_correction(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output file with corrected fiducial markers."""


def fiducials_correction_params(
    input_file: InputPathType,
) -> FiducialsCorrectionParameters:
    """
    Build parameters.
    
    Args:
        input_file: Input file containing imaging data with fiducial markers to\
            correct.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "fiducials_correction",
        "input_file": input_file,
    }
    return params


def fiducials_correction_cargs(
    params: FiducialsCorrectionParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("fiducials_correction")
    cargs.append(execution.input_file(params.get("input_file")))
    cargs.append("[OUTPUT_FILE]")
    return cargs


def fiducials_correction_outputs(
    params: FiducialsCorrectionParameters,
    execution: Execution,
) -> FiducialsCorrectionOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = FiducialsCorrectionOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file("[OUTPUT_FILE]"),
    )
    return ret


def fiducials_correction_execute(
    params: FiducialsCorrectionParameters,
    execution: Execution,
) -> FiducialsCorrectionOutputs:
    """
    A tool for correcting fiducial markers in imaging data. Note: This command has
    dependency issues with the Qt platform plugin 'xcb'. Ensure dependencies are
    properly configured.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `FiducialsCorrectionOutputs`).
    """
    params = execution.params(params)
    cargs = fiducials_correction_cargs(params, execution)
    ret = fiducials_correction_outputs(params, execution)
    execution.run(cargs)
    return ret


def fiducials_correction(
    input_file: InputPathType,
    runner: Runner | None = None,
) -> FiducialsCorrectionOutputs:
    """
    A tool for correcting fiducial markers in imaging data. Note: This command has
    dependency issues with the Qt platform plugin 'xcb'. Ensure dependencies are
    properly configured.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_file: Input file containing imaging data with fiducial markers to\
            correct.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FiducialsCorrectionOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FIDUCIALS_CORRECTION_METADATA)
    params = fiducials_correction_params(
        input_file=input_file,
    )
    return fiducials_correction_execute(params, execution)


__all__ = [
    "FIDUCIALS_CORRECTION_METADATA",
    "FiducialsCorrectionOutputs",
    "FiducialsCorrectionParameters",
    "fiducials_correction",
    "fiducials_correction_params",
]
