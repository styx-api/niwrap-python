# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

INFLATE_SUBJECT_SC_METADATA = Metadata(
    id="0813ce358c83e50fc62e002b6de9508d35f9a2be.boutiques",
    name="inflate_subject_sc",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


InflateSubjectScParameters = typing.TypedDict('InflateSubjectScParameters', {
    "__STYX_TYPE__": typing.Literal["inflate_subject_sc"],
    "subject_dir": str,
    "verbose": bool,
    "debug": bool,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "inflate_subject_sc": inflate_subject_sc_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "inflate_subject_sc": inflate_subject_sc_outputs,
    }.get(t)


class InflateSubjectScOutputs(typing.NamedTuple):
    """
    Output object returned when calling `inflate_subject_sc(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    inflated_output: OutputPathType
    """Inflated subject surface output."""


def inflate_subject_sc_params(
    subject_dir: str,
    verbose: bool = False,
    debug: bool = False,
) -> InflateSubjectScParameters:
    """
    Build parameters.
    
    Args:
        subject_dir: Path to the subject directory.
        verbose: Enable verbose output.
        debug: Enable debug mode.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "inflate_subject_sc",
        "subject_dir": subject_dir,
        "verbose": verbose,
        "debug": debug,
    }
    return params


def inflate_subject_sc_cargs(
    params: InflateSubjectScParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("inflate_subject_sc")
    cargs.append(params.get("subject_dir"))
    if params.get("verbose"):
        cargs.append("--verbose")
    if params.get("debug"):
        cargs.append("--debug")
    return cargs


def inflate_subject_sc_outputs(
    params: InflateSubjectScParameters,
    execution: Execution,
) -> InflateSubjectScOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = InflateSubjectScOutputs(
        root=execution.output_file("."),
        inflated_output=execution.output_file(params.get("subject_dir") + "/inflated_output"),
    )
    return ret


def inflate_subject_sc_execute(
    params: InflateSubjectScParameters,
    execution: Execution,
) -> InflateSubjectScOutputs:
    """
    Inferred description: Tool for inflating subject surfaces, specific details
    unavailable.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `InflateSubjectScOutputs`).
    """
    params = execution.params(params)
    cargs = inflate_subject_sc_cargs(params, execution)
    ret = inflate_subject_sc_outputs(params, execution)
    execution.run(cargs)
    return ret


def inflate_subject_sc(
    subject_dir: str,
    verbose: bool = False,
    debug: bool = False,
    runner: Runner | None = None,
) -> InflateSubjectScOutputs:
    """
    Inferred description: Tool for inflating subject surfaces, specific details
    unavailable.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_dir: Path to the subject directory.
        verbose: Enable verbose output.
        debug: Enable debug mode.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `InflateSubjectScOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(INFLATE_SUBJECT_SC_METADATA)
    params = inflate_subject_sc_params(
        subject_dir=subject_dir,
        verbose=verbose,
        debug=debug,
    )
    return inflate_subject_sc_execute(params, execution)


__all__ = [
    "INFLATE_SUBJECT_SC_METADATA",
    "InflateSubjectScOutputs",
    "InflateSubjectScParameters",
    "inflate_subject_sc",
    "inflate_subject_sc_params",
]
