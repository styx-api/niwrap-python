# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

CONNECTED_COMPONENTS_METADATA = Metadata(
    id="415ac7eebb3cd7123aaeb6ad6eb398b6cc1343ba.boutiques",
    name="connected_components",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


ConnectedComponentsParameters = typing.TypedDict('ConnectedComponentsParameters', {
    "__STYX_TYPE__": typing.Literal["connected_components"],
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "connected_components": connected_components_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "connected_components": connected_components_outputs,
    }.get(t)


class ConnectedComponentsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `connected_components(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_labelled_image_file: OutputPathType
    """Labeled connected components image output file."""


def connected_components_params(
) -> ConnectedComponentsParameters:
    """
    Build parameters.
    
    Args:
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "connected_components",
    }
    return params


def connected_components_cargs(
    params: ConnectedComponentsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("connected_components")
    return cargs


def connected_components_outputs(
    params: ConnectedComponentsParameters,
    execution: Execution,
) -> ConnectedComponentsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = ConnectedComponentsOutputs(
        root=execution.output_file("."),
        output_labelled_image_file=execution.output_file("[OUTPUT_IMAGE].nii.gz"),
    )
    return ret


def connected_components_execute(
    params: ConnectedComponentsParameters,
    execution: Execution,
) -> ConnectedComponentsOutputs:
    """
    A tool for identifying connected components in an image.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `ConnectedComponentsOutputs`).
    """
    params = execution.params(params)
    cargs = connected_components_cargs(params, execution)
    ret = connected_components_outputs(params, execution)
    execution.run(cargs)
    return ret


def connected_components(
    runner: Runner | None = None,
) -> ConnectedComponentsOutputs:
    """
    A tool for identifying connected components in an image.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `ConnectedComponentsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(CONNECTED_COMPONENTS_METADATA)
    params = connected_components_params(
    )
    return connected_components_execute(params, execution)


__all__ = [
    "CONNECTED_COMPONENTS_METADATA",
    "ConnectedComponentsOutputs",
    "ConnectedComponentsParameters",
    "connected_components",
    "connected_components_params",
]
