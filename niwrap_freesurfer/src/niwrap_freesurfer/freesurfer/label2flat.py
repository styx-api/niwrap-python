# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

LABEL2FLAT_METADATA = Metadata(
    id="4324c6b767a12f1782bca11055508c5f21fddd7d.boutiques",
    name="label2flat",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


Label2flatParameters = typing.TypedDict('Label2flatParameters', {
    "__STYX_TYPE__": typing.Literal["label2flat"],
    "subject_name": str,
    "label_file": InputPathType,
    "patch_file": InputPathType,
    "output_file": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "label2flat": label2flat_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "label2flat": label2flat_outputs,
    }.get(t)


class Label2flatOutputs(typing.NamedTuple):
    """
    Output object returned when calling `label2flat(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    result_file: OutputPathType
    """The processed output file generated by label2flat."""


def label2flat_params(
    subject_name: str,
    label_file: InputPathType,
    patch_file: InputPathType,
    output_file: str,
) -> Label2flatParameters:
    """
    Build parameters.
    
    Args:
        subject_name: The name of the subject.
        label_file: The label file path.
        patch_file: The patch file path.
        output_file: The output file path.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "label2flat",
        "subject_name": subject_name,
        "label_file": label_file,
        "patch_file": patch_file,
        "output_file": output_file,
    }
    return params


def label2flat_cargs(
    params: Label2flatParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("label2flat")
    cargs.append(params.get("subject_name"))
    cargs.append(execution.input_file(params.get("label_file")))
    cargs.append(execution.input_file(params.get("patch_file")))
    cargs.append(params.get("output_file"))
    return cargs


def label2flat_outputs(
    params: Label2flatParameters,
    execution: Execution,
) -> Label2flatOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = Label2flatOutputs(
        root=execution.output_file("."),
        result_file=execution.output_file(params.get("output_file")),
    )
    return ret


def label2flat_execute(
    params: Label2flatParameters,
    execution: Execution,
) -> Label2flatOutputs:
    """
    A tool used in FreeSurfer to process labeling and patch files.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `Label2flatOutputs`).
    """
    params = execution.params(params)
    cargs = label2flat_cargs(params, execution)
    ret = label2flat_outputs(params, execution)
    execution.run(cargs)
    return ret


def label2flat(
    subject_name: str,
    label_file: InputPathType,
    patch_file: InputPathType,
    output_file: str,
    runner: Runner | None = None,
) -> Label2flatOutputs:
    """
    A tool used in FreeSurfer to process labeling and patch files.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_name: The name of the subject.
        label_file: The label file path.
        patch_file: The patch file path.
        output_file: The output file path.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `Label2flatOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(LABEL2FLAT_METADATA)
    params = label2flat_params(
        subject_name=subject_name,
        label_file=label_file,
        patch_file=patch_file,
        output_file=output_file,
    )
    return label2flat_execute(params, execution)


__all__ = [
    "LABEL2FLAT_METADATA",
    "Label2flatOutputs",
    "Label2flatParameters",
    "label2flat",
    "label2flat_params",
]
