# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

FSLMATHS_FSL_METADATA = Metadata(
    id="1ba348f3e9fa1acbe3b64d58f1387f609d1c083e.boutiques",
    name="fslmaths.fsl",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


FslmathsFslParameters = typing.TypedDict('FslmathsFslParameters', {
    "__STYX_TYPE__": typing.Literal["fslmaths.fsl"],
    "first_input": InputPathType,
    "operations_and_inputs": str,
    "output_image": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "fslmaths.fsl": fslmaths_fsl_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "fslmaths.fsl": fslmaths_fsl_outputs,
    }.get(t)


class FslmathsFslOutputs(typing.NamedTuple):
    """
    Output object returned when calling `fslmaths_fsl(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """The resultant output image after applying the specified operations."""


def fslmaths_fsl_params(
    first_input: InputPathType,
    operations_and_inputs: str,
    output_image: str,
) -> FslmathsFslParameters:
    """
    Build parameters.
    
    Args:
        first_input: First input image for fslmaths operations.
        operations_and_inputs: Operations and inputs to be applied on the first\
            image.
        output_image: Output image file.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "fslmaths.fsl",
        "first_input": first_input,
        "operations_and_inputs": operations_and_inputs,
        "output_image": output_image,
    }
    return params


def fslmaths_fsl_cargs(
    params: FslmathsFslParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("fslmaths")
    cargs.append(execution.input_file(params.get("first_input")))
    cargs.append(params.get("operations_and_inputs"))
    cargs.append(params.get("output_image"))
    return cargs


def fslmaths_fsl_outputs(
    params: FslmathsFslParameters,
    execution: Execution,
) -> FslmathsFslOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = FslmathsFslOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(params.get("output_image") + ".nii.gz"),
    )
    return ret


def fslmaths_fsl_execute(
    params: FslmathsFslParameters,
    execution: Execution,
) -> FslmathsFslOutputs:
    """
    FSLmaths: part of FMRIB Software Library (FSL) for manipulating images via
    various mathematical operations.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `FslmathsFslOutputs`).
    """
    params = execution.params(params)
    cargs = fslmaths_fsl_cargs(params, execution)
    ret = fslmaths_fsl_outputs(params, execution)
    execution.run(cargs)
    return ret


def fslmaths_fsl(
    first_input: InputPathType,
    operations_and_inputs: str,
    output_image: str,
    runner: Runner | None = None,
) -> FslmathsFslOutputs:
    """
    FSLmaths: part of FMRIB Software Library (FSL) for manipulating images via
    various mathematical operations.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        first_input: First input image for fslmaths operations.
        operations_and_inputs: Operations and inputs to be applied on the first\
            image.
        output_image: Output image file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FslmathsFslOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FSLMATHS_FSL_METADATA)
    params = fslmaths_fsl_params(
        first_input=first_input,
        operations_and_inputs=operations_and_inputs,
        output_image=output_image,
    )
    return fslmaths_fsl_execute(params, execution)


__all__ = [
    "FSLMATHS_FSL_METADATA",
    "FslmathsFslOutputs",
    "FslmathsFslParameters",
    "fslmaths_fsl",
    "fslmaths_fsl_params",
]
