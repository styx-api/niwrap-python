# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA = Metadata(
    id="dc0b150ee17a89e1651ca52dbda01cc2f717b438.boutiques",
    name="@SurfSmooth.HEAT_07.examples",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


VSurfSmoothHeat07ExamplesParameters = typing.TypedDict('VSurfSmoothHeat07ExamplesParameters', {
    "__STYX_TYPE__": typing.Literal["@SurfSmooth.HEAT_07.examples"],
    "path_to_suma_demo": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "@SurfSmooth.HEAT_07.examples": v__surf_smooth_heat_07_examples_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
    }.get(t)


class VSurfSmoothHeat07ExamplesOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__surf_smooth_heat_07_examples(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v__surf_smooth_heat_07_examples_params(
    path_to_suma_demo: str,
) -> VSurfSmoothHeat07ExamplesParameters:
    """
    Build parameters.
    
    Args:
        path_to_suma_demo: Path to SUMA demo directory.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "@SurfSmooth.HEAT_07.examples",
        "path_to_suma_demo": path_to_suma_demo,
    }
    return params


def v__surf_smooth_heat_07_examples_cargs(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("@SurfSmooth.HEAT_07.examples")
    cargs.append(params.get("path_to_suma_demo"))
    return cargs


def v__surf_smooth_heat_07_examples_outputs(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
) -> VSurfSmoothHeat07ExamplesOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = VSurfSmoothHeat07ExamplesOutputs(
        root=execution.output_file("."),
    )
    return ret


def v__surf_smooth_heat_07_examples_execute(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
) -> VSurfSmoothHeat07ExamplesOutputs:
    """
    A script to illustrate controlled blurring of data on the surface.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `VSurfSmoothHeat07ExamplesOutputs`).
    """
    params = execution.params(params)
    cargs = v__surf_smooth_heat_07_examples_cargs(params, execution)
    ret = v__surf_smooth_heat_07_examples_outputs(params, execution)
    execution.run(cargs)
    return ret


def v__surf_smooth_heat_07_examples(
    path_to_suma_demo: str,
    runner: Runner | None = None,
) -> VSurfSmoothHeat07ExamplesOutputs:
    """
    A script to illustrate controlled blurring of data on the surface.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        path_to_suma_demo: Path to SUMA demo directory.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VSurfSmoothHeat07ExamplesOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA)
    params = v__surf_smooth_heat_07_examples_params(
        path_to_suma_demo=path_to_suma_demo,
    )
    return v__surf_smooth_heat_07_examples_execute(params, execution)


__all__ = [
    "VSurfSmoothHeat07ExamplesOutputs",
    "VSurfSmoothHeat07ExamplesParameters",
    "V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA",
    "v__surf_smooth_heat_07_examples",
    "v__surf_smooth_heat_07_examples_params",
]
