# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

ABIDS_JSON_TOOL_PY_METADATA = Metadata(
    id="9cd5d1cbe0772f0f1c51d0bd811ef0336e43437f.boutiques",
    name="abids_json_tool.py",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


AbidsJsonToolPyParameters = typing.TypedDict('AbidsJsonToolPyParameters', {
    "__STYX_TYPE__": typing.Literal["abids_json_tool.py"],
    "input_file": InputPathType,
    "prefix": str,
    "del_json": typing.NotRequired[str | None],
    "values_stay_str": bool,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "abids_json_tool.py": abids_json_tool_py_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
    }.get(t)


class AbidsJsonToolPyOutputs(typing.NamedTuple):
    """
    Output object returned when calling `abids_json_tool_py(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def abids_json_tool_py_params(
    input_file: InputPathType,
    prefix: str,
    del_json: str | None = None,
    values_stay_str: bool = False,
) -> AbidsJsonToolPyParameters:
    """
    Build parameters.
    
    Args:
        input_file: One file to convert. Enter NULL with -add_json to create\
            new json file.
        prefix: Output file name.
        del_json: Remove attribute (KEY) from the -input json file.
        values_stay_str: Each numeric or str item gets saved as a str;\
            otherwise, guess at int and float.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "abids_json_tool.py",
        "input_file": input_file,
        "prefix": prefix,
        "values_stay_str": values_stay_str,
    }
    if del_json is not None:
        params["del_json"] = del_json
    return params


def abids_json_tool_py_cargs(
    params: AbidsJsonToolPyParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("abids_json_tool.py")
    cargs.extend([
        "-input",
        execution.input_file(params.get("input_file"))
    ])
    cargs.extend([
        "-prefix",
        params.get("prefix")
    ])
    if params.get("del_json") is not None:
        cargs.extend([
            "-del_json",
            params.get("del_json")
        ])
    if params.get("values_stay_str"):
        cargs.append("-values_stay_str")
    return cargs


def abids_json_tool_py_outputs(
    params: AbidsJsonToolPyParameters,
    execution: Execution,
) -> AbidsJsonToolPyOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = AbidsJsonToolPyOutputs(
        root=execution.output_file("."),
    )
    return ret


def abids_json_tool_py_execute(
    params: AbidsJsonToolPyParameters,
    execution: Execution,
) -> AbidsJsonToolPyOutputs:
    """
    This script helps to manipulate json files in various ways.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `AbidsJsonToolPyOutputs`).
    """
    params = execution.params(params)
    cargs = abids_json_tool_py_cargs(params, execution)
    ret = abids_json_tool_py_outputs(params, execution)
    execution.run(cargs)
    return ret


def abids_json_tool_py(
    input_file: InputPathType,
    prefix: str,
    del_json: str | None = None,
    values_stay_str: bool = False,
    runner: Runner | None = None,
) -> AbidsJsonToolPyOutputs:
    """
    This script helps to manipulate json files in various ways.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        input_file: One file to convert. Enter NULL with -add_json to create\
            new json file.
        prefix: Output file name.
        del_json: Remove attribute (KEY) from the -input json file.
        values_stay_str: Each numeric or str item gets saved as a str;\
            otherwise, guess at int and float.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `AbidsJsonToolPyOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(ABIDS_JSON_TOOL_PY_METADATA)
    params = abids_json_tool_py_params(
        input_file=input_file,
        prefix=prefix,
        del_json=del_json,
        values_stay_str=values_stay_str,
    )
    return abids_json_tool_py_execute(params, execution)


__all__ = [
    "ABIDS_JSON_TOOL_PY_METADATA",
    "AbidsJsonToolPyOutputs",
    "AbidsJsonToolPyParameters",
    "abids_json_tool_py",
    "abids_json_tool_py_params",
]
