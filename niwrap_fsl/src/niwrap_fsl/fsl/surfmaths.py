# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *

SURFMATHS_METADATA = Metadata(
    id="0c06587bdc6b2f6011719cc92c36318d59f130d9.boutiques",
    name="surfmaths",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


SurfmathsParameters = typing.TypedDict('SurfmathsParameters', {
    "__STYX_TYPE__": typing.Literal["surfmaths"],
    "first_input": InputPathType,
    "operations_inputs": typing.NotRequired[list[str] | None],
    "output": str,
})


def dyn_cargs(
    t: str,
) -> typing.Any:
    """
    Get build cargs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build cargs function.
    """
    return {
        "surfmaths": surfmaths_cargs,
    }.get(t)


def dyn_outputs(
    t: str,
) -> typing.Any:
    """
    Get build outputs function by command type.
    
    Args:
        t: Command type.
    Returns:
        Build outputs function.
    """
    return {
        "surfmaths": surfmaths_outputs,
    }.get(t)


class SurfmathsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surfmaths(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output surface file generated by the tool."""


def surfmaths_params(
    first_input: InputPathType,
    output: str,
    operations_inputs: list[str] | None = None,
) -> SurfmathsParameters:
    """
    Build parameters.
    
    Args:
        first_input: First input surface file.
        output: Output surface file.
        operations_inputs: Mathematical operations and additional inputs.
    Returns:
        Parameter dictionary
    """
    params = {
        "__STYXTYPE__": "surfmaths",
        "first_input": first_input,
        "output": output,
    }
    if operations_inputs is not None:
        params["operations_inputs"] = operations_inputs
    return params


def surfmaths_cargs(
    params: SurfmathsParameters,
    execution: Execution,
) -> list[str]:
    """
    Build command-line arguments from parameters.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Command-line arguments.
    """
    cargs = []
    cargs.append("surfmaths")
    cargs.append(execution.input_file(params.get("first_input")))
    if params.get("operations_inputs") is not None:
        cargs.extend(params.get("operations_inputs"))
    cargs.append(params.get("output"))
    return cargs


def surfmaths_outputs(
    params: SurfmathsParameters,
    execution: Execution,
) -> SurfmathsOutputs:
    """
    Build outputs object containing output file paths and possibly stdout/stderr.
    
    Args:
        params: The parameters.
        execution: The execution object for resolving input paths.
    Returns:
        Outputs object.
    """
    ret = SurfmathsOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(params.get("output")),
    )
    return ret


def surfmaths_execute(
    params: SurfmathsParameters,
    execution: Execution,
) -> SurfmathsOutputs:
    """
    A command-line tool for performing various mathematical operations on surface
    files.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        params: The parameters.
        execution: The execution object.
    Returns:
        NamedTuple of outputs (described in `SurfmathsOutputs`).
    """
    params = execution.params(params)
    cargs = surfmaths_cargs(params, execution)
    ret = surfmaths_outputs(params, execution)
    execution.run(cargs)
    return ret


def surfmaths(
    first_input: InputPathType,
    output: str,
    operations_inputs: list[str] | None = None,
    runner: Runner | None = None,
) -> SurfmathsOutputs:
    """
    A command-line tool for performing various mathematical operations on surface
    files.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        first_input: First input surface file.
        output: Output surface file.
        operations_inputs: Mathematical operations and additional inputs.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SurfmathsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SURFMATHS_METADATA)
    params = surfmaths_params(
        first_input=first_input,
        operations_inputs=operations_inputs,
        output=output,
    )
    return surfmaths_execute(params, execution)


__all__ = [
    "SURFMATHS_METADATA",
    "SurfmathsOutputs",
    "SurfmathsParameters",
    "surfmaths",
    "surfmaths_params",
]
